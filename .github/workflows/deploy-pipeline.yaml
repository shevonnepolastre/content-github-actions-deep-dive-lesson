name: Deploy Lambda Function
on: [push]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps: 
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install flake8
        run: pip install flake8

      - name: Lint with flake8
        run: |
          cd function
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          cd function
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi 

      - name: Zip Lambda bundle
        run: |
          cd function
          zip -r ../${{ github.sha }}.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: zipped-bundle
          path: .

      - name: Create GitHub Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release from run ${{ github.run_number }}
          body: New release for commit ${{ github.sha }}
          draft: false
          prerelease: false
      - name: download artifact
        uses: actions/download-artifact@v2
        with: 
          name: zipped-bundle 
      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with: 
          upload_url: ${{ steps.create-release.outputs.upload.url }}
          asset_path: ./${{ github.sha }}.zip 
          asset_name: source_code_with_libraries.zip
          asset_content_type: application/zip 
